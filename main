def maxProductSubarrayOfSizeK(A, n, k):
    A.sort()
    product = 1
    if (A[n - 1] == 0 and (k & 1)):
        return 0
    if (A[n - 1] <= 0 and (k & 1)) :
        for i in range(n - 1, n - k + 1, -1):
            product *= A[i]
        return product
    i = 0
    j = n - 1
    if (k & 1):
        product *= A[j]
        j-= 1
        k-=1
    k >>= 1
    for itr in range( k) :
        left_product = A[i] * A[i + 1]
        right_product = A[j] * A[j - 1]
        if (left_product > right_product) :
            product *= left_product
            i += 2
        else :
            product *= right_product
            j -= 2
    return product
if __name__ == "__main__":
    A = [ 1, 3, 5, 7, 9, 11 ]
    n = len(A)
    k = 3
    print(maxProductSubarrayOfSizeK(A, n, k))
